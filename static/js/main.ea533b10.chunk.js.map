{"version":3,"sources":["components/Layout/Column.jsx","components/Layout/Row.jsx","components/SearchResult/SearchResultContainer.jsx","components/SearchResult/SearchResultSnippet.jsx","components/SearchResult/SearchResultTitle.jsx","components/Button.jsx","components/LoadingNote.jsx","components/TextField.jsx","components/ReplacePhraseField.jsx","components/SearchPhraseField.jsx","hooks/useGetSearchWikiPhrase.js","api/index.js","hooks/useIsElementHovered.js","utils/searchResultSnippet.js","Main.jsx","utils/array.js","App.js","hooks/useDebouncedSearch.js","serviceWorker.js","index.js"],"names":["Column","props","Grid","container","direction","Row","useStyles","makeStyles","theme","resultContainer","display","flexDirection","alignItems","padding","spacing","color","palette","primary","main","fontWeight","resultContainerReplaceQuery","replaceWithValue","textDecoration","content","paddingLeft","secondary","SearchResultContainer","children","className","showReplaceWithValueHighlight","otherProps","classes","ListItem","clsx","divider","SearchResultSnippet","Typography","variant","component","dangerouslySetInnerHTML","__html","resultTitle","marginBottom","SearchResultTitle","Button","loadingContainer","circularProgress","marginLeft","LoadingNote","Box","CircularProgress","Divider","TextField","onChange","valueProps","value","React","useState","setValue","useEffect","handleChange","useCallback","event","newValue","target","ReplacePhraseField","disabled","id","label","type","SearchPhraseField","useGetSearchWikiPhrase","isFetching","setIsFetching","getSearchWikiPhrase","phrase","fetch","encodeURI","then","response","status","json","catch","finally","useIsElementHovered","hovered","setHovered","setHoveredCallback","isHovered","onMouseOver","onMouseLeave","replaceSearchResultSnippetMatch","snippet","newMatch","replaceAll","margin","maxWidth","searchButton","buttonsContainer","width","row","replaceFirstHighlightedMatch","searchResults","replaceResultIndex","findIndex","result","includes","array","newElement","index","currentResult","updatedResult","slice","length","replaceAllMatches","map","Main","searchQuery","setSearchQuery","setSearchResults","handleWikiPhraseSearch","a","query","search","debouncedHandleWikiPhraseSearch","debounce","flushDebouncedHandleWikiPhraseSearch","flush","cancel","runSearchFlush","useDebouncedSearch","replaceQuery","setReplaceQuery","hoveredReplace","onMouseOverReplace","onMouseLeaveReplace","hoveredReplaceAll","onMouseOverReplaceAll","onMouseLeaveReplaceAll","handleReplaceHighlightPhrase","replacePhrase","updateSearchResultsFunc","disableReplaceField","disableReplaceButtons","onClick","List","key","title","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.ea533b10.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nexport const Column = (props) => (\r\n  <Grid\r\n    {...props}\r\n    container\r\n    direction=\"column\"\r\n  />\r\n)","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nexport const Row = (props) => (\r\n  <Grid\r\n    {...props}\r\n    container\r\n    direction=\"row\"\r\n  />\r\n)","import React from 'react';\r\nimport { makeStyles, ListItem } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  resultContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    padding: theme.spacing(2, 0),\r\n    '& .searchmatch': {\r\n      color: theme.palette.primary.main,\r\n      fontWeight: 'bold',\r\n    }\r\n  },\r\n  resultContainerReplaceQuery: ({ replaceWithValue }) => ({\r\n    '& .searchmatch': {\r\n      textDecoration: 'line-through',\r\n      '&:after': {\r\n        display: 'inline-block',\r\n        textDecoration: 'none',\r\n        content: `\" ${replaceWithValue}\"`,\r\n        paddingLeft: theme.spacing(0.25),\r\n        color: theme.palette.secondary.main\r\n      }\r\n    }\r\n  })\r\n}));\r\n\r\nexport const SearchResultContainer = ({ \r\n  children, \r\n  className, \r\n  replaceWithValue,\r\n  showReplaceWithValueHighlight,\r\n  ...otherProps \r\n}) => {\r\n  const classes = useStyles({ replaceWithValue });\r\n\r\n  return (\r\n    <ListItem\r\n      className={\r\n        clsx(\r\n          className,\r\n          classes.resultContainer,\r\n          replaceWithValue && showReplaceWithValueHighlight && classes.resultContainerReplaceQuery\r\n        )\r\n      }\r\n      {...otherProps}\r\n      divider\r\n    >\r\n      {children}\r\n    </ListItem>\r\n  );\r\n} ","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const SearchResultSnippet = ({ children, ...otherProps }) => (\r\n  <Typography\r\n    variant=\"body2\"\r\n    component=\"div\"\r\n    {...otherProps}\r\n  >\r\n    <div dangerouslySetInnerHTML={{ __html: children }} />\r\n  </Typography>\r\n);\r\n","import React from 'react';\r\nimport { Typography, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  resultTitle: {\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nexport const SearchResultTitle = ({ children, className, ...otherProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Typography\r\n      className={clsx(className, classes.resultTitle)}\r\n      variant=\"h6\"\r\n      {...otherProps}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n} ","import * as React from 'react';\r\nimport { Button as MuiButton } from '@material-ui/core';\r\n\r\nexport const Button = ({ variant, color, ...otherProps }) => (\r\n  <MuiButton\r\n    variant={variant || 'contained'}\r\n    color={color || 'primary'}\r\n    {...otherProps}\r\n  />\r\n)","import React from 'react';\r\nimport { makeStyles, Box, Typography, CircularProgress, Divider } from '@material-ui/core';\r\nimport { Row } from './Layout/Row';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loadingContainer: {\r\n    marginBottom: theme.spacing(1.5)\r\n  },\r\n  circularProgress: {\r\n    marginLeft: theme.spacing(1.5)\r\n  }\r\n}));\r\n\r\nexport const LoadingNote = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      <Row alignItems=\"center\" className={classes.loadingContainer}>\r\n        <Typography>\r\n          Loading, please wait ...\r\n      </Typography>\r\n        <CircularProgress className={classes.circularProgress} />\r\n      </Row>\r\n      <Divider />\r\n    </Box>\r\n  )\r\n}","import React from 'react';\r\nimport { TextField as MuiTextField } from '@material-ui/core';\r\n\r\nexport const TextField = ({ \r\n  onChange, \r\n  variant, \r\n  value: valueProps, \r\n  ...otherProps \r\n}) => {\r\n  const [value, setValue] = React.useState(valueProps);\r\n\r\n  React.useEffect(() => {\r\n    setValue(valueProps);\r\n  }, [valueProps, setValue])\r\n\r\n  const handleChange = React.useCallback((event) => {\r\n    const newValue = event.target.value;\r\n\r\n    setValue(newValue);\r\n    onChange(newValue);\r\n  }, [setValue, onChange]);\r\n\r\n  return (\r\n    <MuiTextField\r\n      onChange={handleChange}\r\n      variant={variant || 'outlined'}\r\n      value={value}\r\n      {...otherProps}\r\n    />\r\n  )\r\n}","import React from 'react';\r\nimport { TextField } from './TextField';\r\n\r\nexport const ReplacePhraseField = ({ onChange, value, disabled }) => {\r\n  return (\r\n    <TextField \r\n      id=\"replace-phrase\"\r\n      label=\"Replace with\"\r\n      onChange={onChange}\r\n      disabled={disabled}\r\n      value={value}\r\n      type=\"text\"\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TextField } from './TextField';\r\n\r\nexport const SearchPhraseField = ({ onChange, value }) => {\r\n  return (\r\n    <TextField \r\n      id=\"search-phrase\"\r\n      label=\"Search phrase\"\r\n      onChange={onChange}\r\n      value={value}\r\n      type=\"text\"\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { getSearchWikiPhrase } from '../api';\r\n\r\nexport const useGetSearchWikiPhrase = () => {\r\n  const [isFetching, setIsFetching] = React.useState(false);\r\n\r\n  const getSearchWikiPhraseCallback = React.useCallback((phrase) => {\r\n    setIsFetching(true);\r\n    return getSearchWikiPhrase(phrase)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch(() => {\r\n        // needs error handling\r\n      })\r\n      .finally(() => {\r\n        setIsFetching(false);\r\n      })\r\n  }, [setIsFetching]);\r\n\r\n  return {\r\n    isFetching,\r\n    getSearchWikiPhrase: getSearchWikiPhraseCallback\r\n  }\r\n}","const API_URL = 'https://en.wikipedia.org/w/';\r\n\r\nexport const getSearchWikiPhrase = (phrase) =>\r\n  fetch(`${API_URL}api.php?action=query&list=search&format=json&srsearch=%22${encodeURI(phrase)}%22&srlimit=10&origin=*`)\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        return response.json();\r\n      } else {\r\n        throw response;\r\n      }\r\n    })","import React from 'react';\r\n\r\nexport const useIsElementHovered = () => {\r\n  const [hovered, setHovered] = React.useState(false);\r\n\r\n  const setHoveredCallback = React.useCallback((isHovered) => () => {\r\n    setHovered(isHovered);\r\n  }, [setHovered]);\r\n\r\n  return {\r\n    hovered,\r\n    onMouseOver: setHoveredCallback(true),\r\n    onMouseLeave: setHoveredCallback(false)\r\n  }\r\n}","export const replaceSearchResultSnippetMatch = (snippet, newMatch) => (\r\n  snippet.replaceAll(\r\n    /<span class=\"searchmatch\">.+<\\/span>/gm,\r\n    `<span class=\"searchmatch\">${newMatch}</span>`\r\n  )\r\n)","import React from 'react';\r\nimport {\r\n  SearchPhraseField,\r\n  ReplacePhraseField,\r\n  Column,\r\n  Row,\r\n  Button,\r\n  SearchResultContainer,\r\n  SearchResultTitle,\r\n  SearchResultSnippet,\r\n  LoadingNote\r\n} from './components';\r\nimport { useIsElementHovered, useDebouncedSearch } from './hooks';\r\nimport { makeStyles, Typography, List } from '@material-ui/core';\r\nimport { replaceSearchResultSnippetMatch, replace } from './utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    margin: theme.spacing(2),\r\n    maxWidth: 750\r\n  },\r\n  searchButton: {\r\n    margin: theme.spacing(0, 1)\r\n  },\r\n  buttonsContainer: {\r\n    width: 'auto',\r\n    '& > *': {\r\n      margin: theme.spacing(0, 1)\r\n    }\r\n  },\r\n  row: {\r\n    margin: theme.spacing(1.5, 0)\r\n  }\r\n}));\r\n\r\nconst replaceFirstHighlightedMatch = (searchResults, newMatch) => {\r\n  const replaceResultIndex = searchResults.findIndex((result) =>\r\n    result.snippet.includes('<span class=\"searchmatch\">')\r\n  );\r\n\r\n  if (replaceResultIndex < 0) {\r\n    return searchResults;\r\n  }\r\n\r\n  const currentResult = searchResults[replaceResultIndex];\r\n\r\n  const updatedResult = {\r\n    ...currentResult,\r\n    snippet: replaceSearchResultSnippetMatch(currentResult.snippet, newMatch)\r\n  }\r\n\r\n  return replace(searchResults, updatedResult, replaceResultIndex);\r\n};\r\n\r\nconst replaceAllMatches = (searchResults, newMatch) => searchResults.map((result) => ({\r\n  ...result,\r\n  snippet: replaceSearchResultSnippetMatch(result.snippet, newMatch)\r\n}));\r\n\r\nexport const Main = () => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    isFetching,\r\n    searchQuery,\r\n    searchResults,\r\n    setSearchQuery,\r\n    setSearchResults,\r\n    runSearchFlush\r\n  } = useDebouncedSearch();\r\n\r\n  const [replaceQuery, setReplaceQuery] = React.useState('');\r\n\r\n  const {\r\n    hovered: hoveredReplace,\r\n    onMouseOver: onMouseOverReplace,\r\n    onMouseLeave: onMouseLeaveReplace\r\n  } = useIsElementHovered();\r\n\r\n  const {\r\n    hovered: hoveredReplaceAll,\r\n    onMouseOver: onMouseOverReplaceAll,\r\n    onMouseLeave: onMouseLeaveReplaceAll\r\n  } = useIsElementHovered();\r\n\r\n  const handleReplaceHighlightPhrase = React.useCallback((replacePhrase, replaceAll) => () => {\r\n    const updateSearchResultsFunc = replaceAll ? replaceAllMatches : replaceFirstHighlightedMatch;\r\n    setSearchResults((searchResults) => updateSearchResultsFunc(searchResults, replacePhrase));\r\n    replaceAll && setReplaceQuery('');\r\n  }, [setSearchResults, setReplaceQuery]);\r\n\r\n  const disableReplaceField = isFetching || !searchQuery || !searchResults || !searchResults.length === 0;\r\n  const disableReplaceButtons = disableReplaceField || !replaceQuery;\r\n\r\n  return (\r\n    <main className={classes.main}>\r\n      <Column>\r\n        <Row className={classes.row}>\r\n          <SearchPhraseField\r\n            value={searchQuery}\r\n            onChange={setSearchQuery}\r\n          />\r\n          <Button\r\n            disabled={isFetching || !searchQuery}\r\n            onClick={runSearchFlush}\r\n            className={classes.searchButton}\r\n          >\r\n            Search\r\n          </Button>\r\n        </Row>\r\n        <Row className={classes.row}>\r\n          <ReplacePhraseField\r\n            disabled={disableReplaceField}\r\n            value={replaceQuery}\r\n            onChange={setReplaceQuery}\r\n          />\r\n          <Row className={classes.buttonsContainer}>\r\n            <Button\r\n              disabled={disableReplaceButtons}\r\n              onClick={handleReplaceHighlightPhrase(replaceQuery, false)}\r\n              onMouseOver={onMouseOverReplace}\r\n              onMouseLeave={onMouseLeaveReplace}\r\n              variant=\"outlined\"\r\n            >\r\n              Replace\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              disabled={disableReplaceButtons}\r\n              onClick={handleReplaceHighlightPhrase(replaceQuery, true)}\r\n              onMouseOver={onMouseOverReplaceAll}\r\n              onMouseLeave={onMouseLeaveReplaceAll}\r\n            >\r\n              Replace all\r\n            </Button>\r\n          </Row>\r\n        </Row>\r\n      </Column>\r\n      {isFetching && (\r\n        <LoadingNote />\r\n      )}\r\n      {searchResults && searchResults.length > 0 && (\r\n        <List>\r\n          {searchResults.map((result, index) => (\r\n            <SearchResultContainer\r\n              key={result.title}\r\n              replaceWithValue={replaceQuery}\r\n              showReplaceWithValueHighlight={(index === 0 && hoveredReplace) || hoveredReplaceAll}\r\n            >\r\n              <SearchResultTitle>\r\n                {result.title}\r\n              </SearchResultTitle>\r\n              <SearchResultSnippet>\r\n                {result.snippet}\r\n              </SearchResultSnippet>\r\n            </SearchResultContainer>\r\n          ))}\r\n        </List>\r\n      )}\r\n      {searchResults && searchResults.length === 0 && (\r\n        <Typography>\r\n          No results for your search query.\r\n        </Typography>\r\n      )}\r\n    </main>\r\n  )\r\n}\r\n","export const replace = (array, newElement, index) => [\r\n  ...array.slice(0, index),\r\n  newElement,\r\n  ...array.slice(index + 1, array.length)\r\n];","import { Main } from './Main';\n\nexport default Main;\n","import React from 'react';\r\nimport debounce from 'lodash.debounce';\r\nimport { useGetSearchWikiPhrase } from './useGetSearchWikiPhrase';\r\n\r\nexport const useDebouncedSearch = () => {\r\n  const [searchQuery, setSearchQuery] = React.useState('');\r\n  const [searchResults, setSearchResults] = React.useState();\r\n\r\n  const { getSearchWikiPhrase, isFetching } = useGetSearchWikiPhrase();\r\n\r\n  const handleWikiPhraseSearch = React.useCallback((phrase) => async () => {\r\n    const searchResults = await getSearchWikiPhrase(phrase);\r\n    setSearchResults(searchResults.query.search);\r\n  }, [getSearchWikiPhrase, setSearchResults])\r\n\r\n  const debouncedHandleWikiPhraseSearch = React.useCallback(\r\n    debounce(handleWikiPhraseSearch(searchQuery), 1000),\r\n    [searchQuery, handleWikiPhraseSearch]\r\n  );\r\n\r\n  const flushDebouncedHandleWikiPhraseSearch = React.useCallback(() => {\r\n    debouncedHandleWikiPhraseSearch.flush();\r\n  }, [debouncedHandleWikiPhraseSearch])\r\n\r\n  React.useEffect(() => {\r\n    searchQuery.length > 0 && debouncedHandleWikiPhraseSearch();\r\n\r\n    // cleanup\r\n    return () => debouncedHandleWikiPhraseSearch.cancel();\r\n  }, [searchQuery, debouncedHandleWikiPhraseSearch]);\r\n\r\n  return {\r\n    isFetching,\r\n    searchQuery,\r\n    setSearchQuery,\r\n    searchResults,\r\n    setSearchResults,\r\n    runSearchFlush: flushDebouncedHandleWikiPhraseSearch\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}